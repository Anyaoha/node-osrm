language: generic

git:
  depth: 10

cache:
  directories:
  - $HOME/.ccache

notifications:
  email: false

addons:
  apt:
    sources:
     - ubuntu-toolchain-r-test
     - llvm-toolchain-precise-3.7
    packages:
     - coreutils
     - clang-3.7
     - llvm-3.7
     - gdb

# TODO: no core files on sudo:false machines until https://github.com/travis-ci/travis-ci/issues/3754 is resolved
sudo: false

matrix:
  include:
     # Linux
     - os: linux
       compiler: ": clang-release-node-v4"
       env: NODE="4" TARGET=Release PUBLISHABLE=true
     - os: linux
       compiler: ": clang-release-node-v0.10"
       env: NODE="0.10" TARGET=Release PUBLISHABLE=true
     - os: linux
       compiler: ": clang-debug-node-v0.10"
       env: NODE="0.10" TARGET=Debug PUBLISHABLE=true
     # OS X
     - os: osx
       compiler: clang
       env: NODE="4" TARGET=Release PUBLISHABLE=true
     - os: osx
       compiler: clang
       env: NODE="0.10" TARGET=Release PUBLISHABLE=true
     - os: osx
       compiler: clang
       env: NODE="0.10" TARGET=Debug PUBLISHABLE=true
     # Coverage
     - os: osx
       compiler: clang
       env: NODE="0.10" COVERAGE=true TARGET=Debug PUBLISHABLE=false

env:
  global:
   - LLVM_VERSION="3.7"
   - CCACHE_TEMPDIR=/tmp/.ccache-temp
   - CCACHE_COMPRESS=1
   - JOBS: "8"
   - secure: KitzGZjoDblX/3heajcvssGz0JnJ/k02dr2tu03ksUV+6MogC3RSQudqyKY57+f8VyZrcllN/UOlJ0Q/3iG38Oz8DljC+7RZxtkVmE1SFBoOezKCdhcvWM12G3uqPs7hhrRxuUgIh0C//YXEkulUrqa2H1Aj2xeen4E3FAqEoy0=
   - secure: WLGmxl6VTVWhXGm6X83GYNYzPNsvTD+9usJOKM5YBLAdG7cnOBQBNiCCUKc9OZMMZVUr3ec2/iigakH5Y8Yc+U6AlWKzlORyqWLuk4nFuoedu62x6ocQkTkuOc7mHiYhKd21xTGMYauaZRS6kugv4xkpGES2UjI2T8cjZ+LN2jU=

before_install:
- scripts/validate_tag.sh
- export COVERAGE=${COVERAGE:-false}
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    export CXX="clang++-${LLVM_VERSION}";
    export CC="clang-${LLVM_VERSION}";
    export AR="/usr/bin/llvm-ar-${LLVM_VERSION}"
    export NM="/usr/bin/llvm-nm-${LLVM_VERSION}"
    export RANLIB="/usr/bin/llvm-ranlib-${LLVM_VERSION}"
    export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python2.7/site-packages;
  elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    sudo sysctl -w kern.sysv.shmmax=4294967296
    sudo sysctl -w kern.sysv.shmall=1048576
    sudo sysctl -w kern.sysv.shmseg=128
    export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python/site-packages;
    brew install md5sha1sum;
    # osrm-backend picks up ccache automatically
    # since osx does not support caching we want to avoid
    # since since it will just slow down builds
    brew rm ccache || true;
  fi
# Mac OS X does not have nvm installed
- source ./scripts/install_node.sh ${NODE}

install:
- if [[ ${COVERAGE} == true ]]; then
    PYTHONUSERBASE=$(pwd)/mason_packages/.link pip install --user cpp-coveralls;
    export LDFLAGS="--coverage";
    export CXXFLAGS="--coverage";
  fi;
- if [[ ${TARGET} == 'Release' ]]; then make; else make debug; fi
- if [[ $(uname -s) == 'Linux' ]]; then du $HOME/.ccache -h --max-depth=1 | sort -hr; fi;

before_script:
- ulimit -c unlimited -S

script:
- RESULT=0
- make test || RESULT=$?
- for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(which node) $i -ex "thread apply all bt" -ex "set pagination 0" -batch; done;
- if [[ ${RESULT} != 0 ]]; then exit $RESULT; fi
- if [[ ${COVERAGE} == true ]]; then
    ./mason_packages/.link/bin/cpp-coveralls --exclude node_modules --exclude mason_packages --exclude tests --build-root build --gcov-options '\-lp' --exclude doc --exclude build/Release/obj/gen;
  fi;
- if [[ ${PUBLISHABLE} == true ]]; then
    ./scripts/publish.sh;
  fi;
